{
  "name": "AI Meeting Minutes - CMHK ON PREMISE",
  "nodes": [
    {
      "parameters": {
        "content": "## Step 1: Batch Transcribing Videos On Fanolab\n1. Look up the T-flow pending to transcribe video\n2. Batch transcribe\n3. Wait until the results return",
        "height": 440,
        "width": 2920
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "900fc941-5e4d-4e72-b94d-34696032c270",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.first().json.data.rows;\n\nconst result_list = items.map((item) => {\n  return {\n    rowid: item.rowid,\n    video_name: item.video_name,\n    url: item.url,\n    sys_id: item.sys_id\n  };\n});\n\nreturn result_list;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        288,
        224
      ],
      "id": "f29afb61-0b1f-4785-b6a1-0f96386f5016",
      "name": "Return Url List"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        640,
        224
      ],
      "id": "f8367890-93cb-4013-b6b3-9e8180247421",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.first().json.data.rows;\n\nconst result_list = items.map((item) => {\n  return {\n    rowid: item.rowid,\n    video_name: item.video_name,\n    url: item.url,\n    sys_id: item.sys_id,\n    fanolab_id: item.fanolab_id\n  };\n});\n\nreturn result_list;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1456,
        208
      ],
      "id": "1c596552-c590-4c0e-bd93-be80b482b96a",
      "name": "Return Url List1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1792,
        208
      ],
      "id": "87f9c364-969f-4cc0-b779-e670abdd3f58",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2736,
        320
      ],
      "id": "e99c2772-e626-4041-a6f1-90735404bc3e",
      "name": "Wait 10mins",
      "webhookId": "dae4800e-9d66-459b-bb1e-d78437b5892d"
    },
    {
      "parameters": {
        "content": "## Step 2: Update the Transcription to T-flow\n1. Look up transcription \n2. Update to T-flow",
        "height": 440,
        "width": 2880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        560
      ],
      "typeVersion": 1,
      "id": "0fe4d3e7-5ab6-4e55-96a7-da86e3c2df9a",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "jsCode": "var target_row_id = $('Loop Over Items3').first().json.rowid\nvar transcription = $input.first().json.transcriptions\nvar speaker_stats = $input.first().json.speaker_stats\nvar speaker_list = []\nfor (const speaker in speaker_stats) {\n  if (speaker_stats.hasOwnProperty(speaker)) {\n      speaker_list.push({\n          speaker_id: speaker,\n          ...speaker_stats[speaker]\n      });\n  }\n}\nvar total_duration = $input.first().json.total_duration\n\n\nvar output = {\n  rowid: target_row_id, \n  total_duration: total_duration,\n  speaker_stats: speaker_list,\n  transcriptions: transcription }\n\nreturn output\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        96,
        768
      ],
      "id": "80b0083d-da10-4950-93d6-00e332fb7b25",
      "name": "Map RowId and Transcriptions1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1328,
        800
      ],
      "id": "5a0330ce-06f2-4d05-b314-b2fc2348b151",
      "name": "Merge2"
    },
    {
      "parameters": {
        "jsCode": "var speaker_stats = $input.first().json.speaker_stats;\nvar resultArray = [];\n\nfor (const speaker of speaker_stats) {\n    var output_obj = [\n        { \"controlId\": \"speaker\", \"value\": speaker.speaker_id },\n        { \"controlId\": \"meeting_minutes\", \"value\": $input.first().json.rowid }, // Assuming static value\n        { \"controlId\": \"wpm\", \"value\": speaker.words_per_minute.toFixed(2) },\n        { \"controlId\": \"talk_time\", \"value\": (speaker.percentage / 100).toFixed(2) },\n        { \"controlId\": \"total_talk_time\", \"value\": (speaker.total_duration / 60).toFixed(2) }\n    ]\n        if (speaker.identified_name !== \"unknown\") {\n            output_obj.push({ \"controlId\": \"name\", \"value\": speaker.identified_name });\n        }\n  \n    resultArray.push(output_obj);\n}\n\nreturn {data: resultArray};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        864
      ],
      "id": "73e35ede-8b96-480f-aad0-8263577a6c4c",
      "name": "Set Speaker Map Data2"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "358e98c1-5b86-4d8c-88e9-f46f6b7996d5",
        "authentication": "headerAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -192,
        224
      ],
      "id": "43f09be4-fb6e-468b-81bf-c0854d615552",
      "name": "Webhook",
      "webhookId": "358e98c1-5b86-4d8c-88e9-f46f6b7996d5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "5smlbamU5XVCovKu",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/getFilterRows",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{ $('Webhook').item.json.body.appKey}}\",\n  \"sign\": \"{{ $('Webhook').item.json.body.sign}}\",\n  \"worksheetId\": \"meeting_minutes\",\n  \"pageSize\": 50,\n  \"pageIndex\": 1,\n  \"listType\": 1,\n  \"filters\":[\n        {\n            \"controlId\":\"process_status\",\n            \"spliceType\": 1,\n            \"filterType\":2,\n            \"value\": \"Pending To Process\"\n        }\n    ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        80,
        224
      ],
      "id": "3856dcce-68c9-4ddc-bc3f-973b3ba5c217",
      "name": "[T-flow] Get Meeting Minutes List"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ai_meeting_backend:8000/fanolab_submit_transcription",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "source_url",
              "value": "={{ $json.url }}"
            },
            {
              "name": "language_code",
              "value": "yue-x-auto"
            },
            {
              "name": "application_owner",
              "value": "={{ $('Webhook').item.json.body.app_owner }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": false
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1008,
        320
      ],
      "id": "0a5fe27a-9824-46a8-86eb-851499897e9c",
      "name": "[Backend] Submit Fanolab API"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/editRow",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{ $('Webhook').item.json.body.appKey}}\",\n  \"sign\": \"{{ $('Webhook').item.json.body.sign}}\",\n  \"worksheetId\": \"meeting_minutes\",\n  \"rowId\":\"{{ $('Loop Over Items2').item.json.rowid }}\",\n  \"triggerWorkflow\": false,\n  \"controls\":[\n        {\n            \"controlId\":\"fanolab_id\",\n            \"value\":\"{{ $json.name }}\"\n        },\n        {\n           \"controlId\":\"process_status\",\n            \"value\":\"Transcribing\"\n        }\n    ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1216,
        320
      ],
      "id": "e14781c9-0061-4b10-a36e-3d26a126cb7e",
      "name": "[T-flow] Update T-flow Fanolab ID",
      "notesInFlow": true,
      "notes": "Update the transcript and the status of the row data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/getFilterRows",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{ $('Webhook').item.json.body.appKey}}\",\n  \"sign\": \"{{ $('Webhook').item.json.body.sign}}\",\n  \"worksheetId\": \"meeting_minutes\",\n  \"rowIds\":[{{ $('[T-flow] Get Meeting Minutes List').item.json.data.rows.map(row => `\"${row.rowid}\"`).join(', ')}}],\n  \"pageSize\": 50,\n  \"pageIndex\": 1,\n  \"listType\": 1,\n  \"filters\":[\n       {\n            \"controlId\":\"process_status\",\n            \"spliceType\": 1,\n            \"filterType\":2,\n            \"value\": \"Transcribing\"\n        }\n\n\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1152,
        208
      ],
      "id": "e5e192d6-ba9c-4374-9102-eda4b154b151",
      "name": "[T-flow] Get Meeting Minutes List with fanolab id"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ai_meeting_backend:8000/fanolab_transcription",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "sys_id",
              "value": "={{ $('Cache Fanolab Data').item.json.sys_id }}"
            },
            {
              "name": "fanolab_id",
              "value": "={{ $('Cache Fanolab Data').item.json.fanolab_id }}"
            },
            {
              "name": "source_url",
              "value": "={{ $('Cache Fanolab Data').item.json.url }}"
            },
            {
              "name": "application_owner",
              "value": "={{ $('Webhook').item.json.body.app_owner }}"
            },
            {
              "name": "confidence_threshold",
              "value": "={{ $('Webhook').item.json.body.confidence_threshold }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": false
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2208,
        288
      ],
      "id": "b9df2f8f-a9c7-40f2-8c87-45e233a05432",
      "name": "[Backend] Get Fanolab Transcription",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/editRow",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{ $('Webhook').item.json.body.appKey}}\",\n  \"sign\": \"{{ $('Webhook').item.json.body.sign}}\",\n  \"worksheetId\": \"meeting_minutes\",\n  \"rowId\":\"{{ $json.rowid}}\",\n  \"triggerWorkflow\": false,\n  \"controls\":[\n        {\n            \"controlId\":\"process_status\",\n            \"value\":\"Pending To AI\"\n        },\n        {\n            \"controlId\":\"transcript\",\n            \"value\": \"{{ $json.transcriptions.join(\"\\\\n\")}}\"\n        },\n        {\n            \"controlId\":\"duration\",\n            \"value\": \"{{ ($json.total_duration / 60)}}\"\n        }\n    ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1008,
        704
      ],
      "id": "9c8e0fb9-2a38-4bd5-8b94-419e8a60a0e6",
      "name": "[T-flow] Update T-flow Fano Data",
      "notesInFlow": true,
      "notes": "Update the transcript and the status of the row data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/addRows",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "appKey",
              "value": "={{ $('Webhook').item.json.body.appKey}}"
            },
            {
              "name": "sign",
              "value": "={{ $('Webhook').item.json.body.sign}}"
            },
            {
              "name": "worksheetId",
              "value": "speaker_map"
            },
            {
              "name": "triggerWorkflow",
              "value": "true"
            },
            {
              "name": "rows",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        768,
        864
      ],
      "id": "b6b801bd-3df6-487b-a947-387ae8fc3889",
      "name": "[T-flow] Update Speaker Map Fano",
      "notesInFlow": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "success",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "e992a465-f6df-469b-ab4e-5aacf6ea5524"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Success"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "84e7d4e1-8ce6-49f0-aa91-217263a3cf0a",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "failed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Failed"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "927472c8-9aaf-4f6f-ac90-011672909663",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "in_progress",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "In progress"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2400,
        288
      ],
      "id": "16ef4fce-f97a-487f-991b-6365cbb9def9",
      "name": "Switch1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/editRow",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{ $('Webhook').item.json.body.appKey}}\",\n  \"sign\": \"{{ $('Webhook').item.json.body.sign}}\",\n  \"worksheetId\": \"meeting_minutes\",\n  \"rowId\":\"{{ $('Loop Over Items3').item.json.rowid}}\",\n  \"triggerWorkflow\": false,\n  \"controls\":[\n        {\n            \"controlId\":\"process_status\",\n            \"value\":\"Failed\"\n        },\n        {\n            \"controlId\":\"transcript\",\n            \"value\": \"Failed: {{$json.message}} \"\n        }\n    ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2736,
        16
      ],
      "id": "45aea181-7b2c-4fdb-b51a-83edd98242e0",
      "name": "[T-flow] Update T-flow Data Failed1",
      "notesInFlow": true,
      "notes": "Update the transcript and the status of the row data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "18bc23c8-a109-4372-987e-79b8dacb0076",
              "name": "sys_id",
              "value": "={{ $json.sys_id }}",
              "type": "string"
            },
            {
              "id": "6e228561-1fa9-4da3-bb17-864bab45b8a1",
              "name": "rowid",
              "value": "={{ $json.rowid }}",
              "type": "string"
            },
            {
              "id": "ad737cee-c578-4d05-a38c-3c56ce8af619",
              "name": "video_name",
              "value": "={{ $json.video_name }}",
              "type": "string"
            },
            {
              "id": "635a0c65-ee5d-4e91-bb39-0be055bd7d66",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            },
            {
              "id": "c4ee200d-47df-4bd9-8914-cc6d9530e6d5",
              "name": "fanolab_id",
              "value": "={{ $json.fanolab_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2000,
        288
      ],
      "id": "eb50b394-81bd-4a36-9ef2-6cedb893ca1f",
      "name": "Cache Fanolab Data"
    },
    {
      "parameters": {
        "jsCode": "const items_list = $input.first().json.data.rows;\n\nvar output_list = []\n\nfor (const item of items_list) {\n  var output_obj = {\n    rowid: item.rowid,\n    sys_id: item.sys_id,\n    datetime: item.datetime,\n    project: item.project,\n    description: item.description,\n    transcript: item.transcript\n  }\n  output_list.push(output_obj)\n}\n\n// Sort by datetime (assuming datetime is in a format that can be sorted correctly as a string)\noutput_list.sort((a, b) => new Date(a.datetime) - new Date(b.datetime));\n\n\nreturn output_list;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        1360
      ],
      "id": "a2fe8abc-f2f8-4419-b60f-8b634bfb9230",
      "name": "Map the Transcript1"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst updatedItems = items.map((item) => {\n  // const textArray = $input.first().json.text.split(\"\\n\");\n  const textArray = $input.first().json.output.output_text.split(\"\\n\");\n  return { textArray };\n});\nreturn updatedItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2032,
        1440
      ],
      "id": "42acfae0-0352-4094-93d4-8ba6f0b7c84c",
      "name": "Set response1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "aac290ed-b8f5-4ff7-b1cb-7e12437b6c30",
              "name": "project_rowid",
              "value": "={{ $json.data.rows[0].rowid }}",
              "type": "string"
            },
            {
              "id": "cffa3886-58b2-4a95-b680-faeb331a5a21",
              "name": "rowid",
              "value": "={{ $('Loop Over Items5').item.json.rowid }}",
              "type": "string"
            },
            {
              "id": "6a34171b-69fe-4c63-ac4b-748b22bce907",
              "name": "datetime",
              "value": "={{ $('Loop Over Items5').item.json.datetime }}",
              "type": "string"
            },
            {
              "id": "e3f3a068-1b6b-4bc6-94b8-34850456a50e",
              "name": "description",
              "value": "={{ $('Loop Over Items5').item.json.description }}",
              "type": "string"
            },
            {
              "id": "56c68ce0-ee31-4876-b390-86ce96446d49",
              "name": "transcript",
              "value": "={{ $('Loop Over Items5').item.json.transcript }}",
              "type": "string"
            },
            {
              "id": "3dca3745-ed45-49c3-843d-438824e1b0ec",
              "name": "project_overview",
              "value": "={{ $('[T-flow] Get Project Context1').item.json.data.rows.first().overview}}",
              "type": "string"
            },
            {
              "id": "3007f9bb-c1d0-45f9-949f-90c1198f9b97",
              "name": "glossary",
              "value": "={{ $('[T-flow] Get Project Context1').item.json.data.rows.first().glossary}}",
              "type": "string"
            },
            {
              "id": "859811a6-223d-4516-a75a-583cf84b0610",
              "name": "long_term_memory",
              "value": "={{ $('[T-flow] Get Project Context1').item.json.data.rows.first().memory}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1408,
        1440
      ],
      "id": "1ad4f4a3-63e8-40c5-9326-54195be52140",
      "name": "Set Project Context1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Objective:\nYou are responsible for maintaining a concise long-term memory of project discussions. When a new meeting transcript is provided, update the memory with key points while ensuring brevity and relevance.\n\nMemory Update Format:\nFor each new update, summarize the transcript using the following structure in pure text, the format is listed within the <format> tag:\n<format>\nDatetime: [Date and time of the meeting]\nDiscussion Points: [Key topics discussed]\nDecisions Made: [Finalized conclusions or agreements]\nAction Items: [Tasks assigned, including responsible parties]\nGuidelines for Updating Memory:\nBe Concise: Summarize only the essential points. Avoid redundancy or excessive details.\nPrioritize Relevance: Focus on updates that impact future discussions or decisions.\nMaintain Clarity: Use clear and structured bullet points for easy reference.\nEnsure Continuity: Retain important context from previous updates while integrating new information logically.\nLanguage: Make sure everything is written in Cantonese\nOutput format: Make sure the output is pure string\n</format>\n\n# Below is the Project Context, background for reference only, not the current meeting minutes:\n<PROJECT BACKGROUND CONTEXT, DON'T SUMMARIZE IT AS MEETING CONTENT>\n\n# Project Overview:\n<project context for reference, DON'T SUMMARIZE IT AS MEETING CONTENT>\n{{ $('Set Project Context1').first().json.project_overview }}\n</project context for reference, DON'T SUMMARIZE IT AS MEETING CONTENT>\n\n# Current memory:\n<project memory for reference, DON'T SUMMARIZE IT AS MEETING CONTENT>\n{{ $('Set Memory List1').item.json.output_list.toJsonString() }}\n</project memory for reference, DON'T SUMMARIZE IT AS MEETING CONTENT>\n\n# Here is the glossary of the project\n<project glossary>\n{{ $('Set Project Context1').first().json.glossary }}\n</project glossary>\n\n\n</PROJECT BACKGROUND CONTEXT, DON'T SUMMARIZE IT AS MEETING CONTENT>\n\n\n<ACTUAL MEETING MINUTES TO BE SUMMARIZED>\n\n# Meeting Description\n<new meeting description>\n{{ $('Set Project Context1').first().json.description }}\n</new meeting description>\n\n# Meeting Minutes Date\n{{ $('Set Project Context1').first().json.datetime }}\n\n# Summarize the below new meeting for updating the new memory\n<New meeting minutes pending to be summarized>\n{{ $('Set response1').item.json.textArray.join(\"\\\\n\") }}\n</New meeting minutes pending to be summarized>\n\n</ACTUAL MEETING MINUTES TO BE SUMMARIZED>"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2128,
        1696
      ],
      "id": "b3b802a3-a02f-46b1-bd9d-6b04c80f87f8",
      "name": "Updating LT Memory Chain1"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nvar output_list = []\nfor (const item of $input.first().json.data.rows) {\n  var meeting_dt = item.datetime\n  var meeting_memory = item.memory\n  var output = {meeting_dt: meeting_dt, meeting_memory: meeting_memory}\n  output_list.push(output)\n}\n\nreturn {output_list};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2640,
        1440
      ],
      "id": "42b32fde-187b-4450-b3de-3dd019f6b2f5",
      "name": "Set Memory List1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "586c23aa-3a7b-4d11-9c5e-c2e36efce3c7",
              "name": "appKey",
              "value": "={{ $json.appKey }}",
              "type": "string"
            },
            {
              "id": "76fafa1e-7d84-4337-a3ec-64da7d81a1dd",
              "name": "sign",
              "value": "={{ $json.sign }}",
              "type": "string"
            },
            {
              "id": "01ede934-21de-47f1-9c83-906766fbc1d4",
              "name": "rowIds",
              "value": "={{ $json.rowIds }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        256,
        1264
      ],
      "id": "cb76a6ce-4758-4651-be6f-5f300e0a8c95",
      "name": "Set Workflow State1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/getFilterRows",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"appKey\": \"{{ $('Set Workflow State1').first().json.appKey}}\",\n  \"sign\": \"{{ $('Set Workflow State1').first().json.sign }}\",\n  \"worksheetId\": \"project_overview\",\n  \"pageSize\": 50,\n  \"pageIndex\": 1,\n  \"listType\": 1,\n  \"filters\":[\n      {\n        \"controlId\":\"project\",\n        \"spliceType\": 1,\n        \"filterType\":2,\n        \"value\": \"{{ $json.project }}\"\n      }\n    ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1216,
        1440
      ],
      "id": "0fe90fbc-0069-4d6e-8ad0-520f6ea6cf86",
      "name": "[T-flow] Get Project Context1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/editRow",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{$('Set Workflow State1').first().json.appKey}}\",\n  \"sign\": \"{{$('Set Workflow State1').first().json.sign}}\",\n  \"worksheetId\": \"meeting_minutes\",\n  \"triggerWorkflow\": true,\n  \"controls\": [\n    {\n      \"controlId\": \"process_status\",\n      \"value\": \"Completed\"\n    },\n    {\n      \"controlId\": \"ai_summary\",\n      \"value\": \"{{ $json.textArray.join(\"\\\\n\") }}\"\n    }\n  ],\n  \"rowId\": \"{{ $('Set Project Context1').item.json.rowid}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2240,
        1440
      ],
      "id": "8cf90a57-c713-42d1-8e12-d8caceab05ff",
      "name": "[T-flow] Update AI Summary1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/getFilterRows",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{$('Set Workflow State1').first().json.appKey}}\",\n  \"sign\": \"{{$('Set Workflow State1').first().json.sign}}\",\n  \"worksheetId\": \"project_memory\",\n  \"pageSize\": 50,\n  \"pageIndex\": 1,\n  \"listType\": 0,\n  \"controls\": [],\n  \"filters\": [\n      {\n        \"controlId\":\"project\",\n        \"value\": \"{{$('Loop Over Items5').item.json.project}}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2432,
        1440
      ],
      "id": "f92b369a-fccf-4cd1-9c58-1d2bf5ec0c61",
      "name": "[T-flow] Get Project Memory1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/addRow",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{$('Set Workflow State1').first().json.appKey}}\",\n  \"sign\": \"{{$('Set Workflow State1').first().json.sign}}\",\n  \"worksheetId\": \"project_memory\",\n  \"triggerWorkflow\": true,\n  \"controls\": [\n    {\n      \"controlId\": \"datetime\",\n      \"value\": \"{{ $('Loop Over Items5').item.json.datetime }}\"\n    },\n    {\n      \"controlId\": \"project_overview\",\n      \"value\": \"{{ $('Set Project Context1').item.json.project_rowid }}\"\n    },\n    {\n      \"controlId\": \"meeting_minutes\",\n      \"value\": \"{{ $('Loop Over Items5').item.json.rowid }}\"\n    },\n    {\n      \"controlId\": \"memory\",\n      \"value\": \"{{ $json.text.replaceAll(/\\r?\\n/g, \"\\\\n\").replaceAll(\"\\\\n{\\\\n\", \"\").replaceAll(\"\\\\n}\\\\n\", \"\").replaceAll(/```/g, \"\") }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2640,
        1696
      ],
      "id": "2806d73f-76f2-4afa-903b-183d1df0d778",
      "name": "[T-flow] Update Memory List1"
    },
    {
      "parameters": {
        "content": "## Step 3: Contextual Summarize By AI\n1. Look up transcription \n2. Look up previous long term memory",
        "height": 880,
        "width": 2860,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        1104
      ],
      "typeVersion": 1,
      "id": "3c0725d0-485d-457f-8a67-e589b47012b2",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        928,
        1360
      ],
      "id": "58191ed9-d097-4a59-b97a-e04184109bb2",
      "name": "Loop Over Items5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/getFilterRows",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{ $('Set Workflow State1').item.json.appKey }}\",\n  \"sign\": \"{{ $('Set Workflow State1').item.json.sign }}\",\n  \"worksheetId\": \"meeting_minutes\",\n  \"pageSize\": 50,\n  \"pageIndex\": 1,\n  \"listType\": 1,\n  \"filters\":[\n      {\n        \"controlId\":\"rowid\",\n        \"spliceType\": 1,\n        \"filterType\":2,\n        \"values\": [{{ $('Set Workflow State1').item.json.rowIds}}]\n      },\n      {\n        \"controlId\":\"process_status\",\n        \"spliceType\": 1,\n        \"filterType\":2,\n        \"value\": \"Pending To AI\"\n      }\n    ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        496,
        1360
      ],
      "id": "abcf9827-f079-44dd-bae9-706286215fa5",
      "name": "[T-flow] Get Meeting Minutes List2",
      "notesInFlow": true,
      "notes": "By Project and Status \"Pending To AI\""
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d2ee90f-c36b-407e-bec7-56e0e3af6778",
              "name": "appKey",
              "value": "={{ $('Webhook').item.json.body.appKey}}",
              "type": "string"
            },
            {
              "id": "9e86b4b5-0092-4164-b983-b9f1729d5877",
              "name": "sign",
              "value": "={{ $('Webhook').item.json.body.sign}}",
              "type": "string"
            },
            {
              "id": "9e06a8c1-4cd6-464e-a556-39286a61309a",
              "name": "rowIds",
              "value": "={{ $('[T-flow] Get Meeting Minutes List').item.json.data.rows.map(row => `\"${row.rowid}\"`).join(', ')}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1760,
        784
      ],
      "id": "1c497cd3-0795-47db-b351-f3363aee57af",
      "name": "Set T-flow App and Sign Fano"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.62.130:8880/api/v2/open/worksheet/editRow",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"appKey\": \"{{ $('Webhook').item.json.body.appKey}}\",\n  \"sign\": \"{{ $('Webhook').item.json.body.sign}}\",\n  \"worksheetId\": \"meeting_minutes\",\n  \"rowId\":\"{{ $('Loop Over Items3').item.json.rowid}}\",\n  \"triggerWorkflow\": false,\n  \"controls\":[\n        {\n            \"controlId\":\"process_status\",\n            \"value\":\"Failed\"\n        },\n        {\n            \"controlId\":\"transcript\",\n            \"value\": \"Failed: Reset and try again\"\n        }\n    ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2736,
        176
      ],
      "id": "ffbe2b82-9964-4e5e-b555-98b875db67b8",
      "name": "[T-flow] Update T-flow Data Failed2",
      "notesInFlow": true,
      "notes": "Update the transcript and the status of the row data"
    },
    {
      "parameters": {
        "chunkingMode": "advanced",
        "options": {
          "summarizationMethodAndPrompts": {
            "values": {
              "summarizationMethod": "refine",
              "refinePrompt": "=# Meeting Date\n{{ $('Set Project Context1').first().json.datetime }}\n\n# Meeting Description\n<project description>\n{{ $('Set Project Context1').first().json.description }}\n</project description>\n\n# Here is the glossary of the project\n<project glossary>\n{{ $('Set Project Context1').first().json.glossary }}\n</project glossary>\n\n#Task:\nSummarize the provided meeting minutes transcript below into clear, concise bullet points.\n\n#Rules:\n1. Summarize the transcript in Cantonese.\n2. Present the summary entirely in bullet point format.\n3. Focus on capturing key discussion points, decisions made, and action items (including responsible persons and deadlines if mentioned).\n\n4. Use concise and objective language, following best practices for effective meeting minutes.\n\n5. Structure your summary in a way that mirrors the meeting agenda where possible\n\n6. Make sure for each item, you added the timeline as citation to the transcript\n<example>\n**討論要點：**\n- XXXX (00:12:00 - 00:15:00)\n</example>\n\n\nYour job is to produce a final summary using below sample format\n<sample>\n- **會議日期：** 2025年3月18日 08:46 AM\n- **會議主題：** XXXX\n\n**討論要點：**\n- XXXX\n\n**決策：**\n- XXXX\n\n**行動項目：**\n- XXXXX\n\n**其他重點：**\n- XXXX\n</sample>\n\nWe have provided an existing summary up to a certain point: \"{existing_answer}\"\nWe have the opportunity to refine the existing summary\n(only if needed) with some more context below.\n------------\n\"{text}\"\n------------\n\nGiven the new context, refine the original summary\nIf the context isn't useful, return the original summary.\n\nREFINED SUMMARY:",
              "refineQuestionPrompt": "=# Meeting Date\n{{ $('Set Project Context1').first().json.datetime }}\n\n# Meeting Description\n<project description>\n{{ $('Set Project Context1').first().json.description }}\n</project description>\n\n# Here is the glossary of the project\n<project glossary>\n{{ $('Set Project Context1').first().json.glossary }}\n</project glossary>\n\n#Task:\nSummarize the provided meeting minutes transcript below into clear, concise bullet points.\n\n#Rules:\n1. Summarize the transcript in Cantonese.\n2. Present the summary entirely in bullet point format.\n3. Focus on capturing key discussion points, decisions made, and action items (including responsible persons and deadlines if mentioned).\n<example>\n- **會議日期：** 2025年3月18日 08:46 AM\n- **會議主題：** XXXX\n\n**討論要點：**\n- XXXX\n\n**決策：**\n- XXXX\n\n**行動項目：**\n- XXXXX\n\n**其他重點：**\n- XXXX\n</example>\n\n4. Use concise and objective language, following best practices for effective meeting minutes.\n\n5. Structure your summary in a way that mirrors the meeting agenda where possible\n\n6. Make sure for each item, you added the timeline as citation to the transcript\n<example>\n**討論要點：**\n- XXXX (00:12:00 - 00:15:00)\n</example>\n\n\nWrite a concise summary of the following:\n<summarize>\n\n\"{text}\"\n\n</summarize>\nCONCISE SUMMARY:"
            }
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2.1,
      "position": [
        1632,
        1440
      ],
      "id": "cb8934f6-fe0a-4915-8e2d-0974e1faa8d5",
      "name": "Summarization Chain"
    },
    {
      "parameters": {
        "chunkSize": 20000,
        "chunkOverlap": 1000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1888,
        1600
      ],
      "id": "69f27904-057e-4743-bc89-265ac8517785",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -272,
        1248
      ],
      "id": "b2eab1d7-df97-4f41-8dd2-b9bb0f8efebb",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-r1-distill-llama-70b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1472,
        1744
      ],
      "id": "c3c2b4b7-bf42-49b0-ac5b-4a7717cef25b",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "hITFV12Y91OoL0mM",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        1600,
        1760
      ],
      "id": "ee359282-cc2b-43b2-9c03-d255394dc464",
      "name": "Ollama Model",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "=DeepSeek-R1-Distill-Llama-70B-FP8-dynamic",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1824,
        1760
      ],
      "id": "e97b944e-fcb9-4a7c-a9aa-6812e95dc625",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "AbYIXcg0FjcHiDlo",
          "name": "ON PREMISE DEEPSEEK R1 70B"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "steveykyu.app.n8n.cloud",
            "user-agent": "Apache-HttpClient/4.5.13 (Java/17.0.13)",
            "content-length": "545",
            "accept": "application/json;charset=UTF-8",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "47.242.172.253",
            "cf-ew-via": "15",
            "cf-ipcountry": "HK",
            "cf-ray": "94be1cfb0786110d-HKG",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "multipart/form-data; boundary=Xl39G4711lDv0vvkv5p0ldyLqrnUvK1Q89CQn",
            "n8n_test": "n8n_test",
            "x-forwarded-for": "47.242.172.253, 172.71.211.7",
            "x-forwarded-host": "steveykyu.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-18-7959cfc789-ft96v",
            "x-is-trusted": "yes",
            "x-real-ip": "47.242.172.253"
          },
          "params": {},
          "query": {},
          "body": {
            "appKey": "8ddaad176169573a",
            "sign": "MGQzYzUxZTQyNjFmYmFhZGE5M2RlNDYxNDBlNWZhMzE3MTZkOTQzOGIxNTQwYWUxMTNlMjg4NTU0YjJhZGYyZQ==",
            "app_owner": "catomind-uat",
            "confidence_threshold": "0.9"
          },
          "webhookUrl": "https://steveykyu.app.n8n.cloud/webhook/358e98c1-5b86-4d8c-88e9-f46f6b7996d5",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Return Url List": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "[T-flow] Get Meeting Minutes List with fanolab id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "[Backend] Submit Fanolab API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Url List1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "Set T-flow App and Sign Fano",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cache Fanolab Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 10mins": {
      "main": [
        [
          {
            "node": "[Backend] Get Fanolab Transcription",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Speaker Map Data2": {
      "main": [
        [
          {
            "node": "[T-flow] Update Speaker Map Fano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map RowId and Transcriptions1": {
      "main": [
        [
          {
            "node": "[T-flow] Update T-flow Fano Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Speaker Map Data2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "[T-flow] Get Meeting Minutes List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Get Meeting Minutes List": {
      "main": [
        [
          {
            "node": "Return Url List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Backend] Submit Fanolab API": {
      "main": [
        [
          {
            "node": "[T-flow] Update T-flow Fanolab ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Update T-flow Fanolab ID": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Get Meeting Minutes List with fanolab id": {
      "main": [
        [
          {
            "node": "Return Url List1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Backend] Get Fanolab Transcription": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Update T-flow Fano Data": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Update Speaker Map Fano": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Map RowId and Transcriptions1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "[T-flow] Update T-flow Data Failed1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait 10mins",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "[T-flow] Update T-flow Data Failed2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cache Fanolab Data": {
      "main": [
        [
          {
            "node": "[Backend] Get Fanolab Transcription",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map the Transcript1": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set response1": {
      "main": [
        [
          {
            "node": "[T-flow] Update AI Summary1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Project Context1": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Updating LT Memory Chain1": {
      "main": [
        [
          {
            "node": "[T-flow] Update Memory List1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Memory List1": {
      "main": [
        [
          {
            "node": "Updating LT Memory Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Workflow State1": {
      "main": [
        [
          {
            "node": "[T-flow] Get Meeting Minutes List2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Get Project Context1": {
      "main": [
        [
          {
            "node": "Set Project Context1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Update AI Summary1": {
      "main": [
        [
          {
            "node": "[T-flow] Get Project Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Get Project Memory1": {
      "main": [
        [
          {
            "node": "Set Memory List1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Update Memory List1": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [],
        [
          {
            "node": "[T-flow] Get Project Context1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[T-flow] Get Meeting Minutes List2": {
      "main": [
        [
          {
            "node": "Map the Transcript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set T-flow App and Sign Fano": {
      "main": [
        [
          {
            "node": "Set Workflow State1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain": {
      "main": [
        [
          {
            "node": "Set response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Updating LT Memory Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6aa70a33-930f-4d62-9052-c77bef52d99a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "lOsR0v1kTt9L70zc",
  "tags": []
}